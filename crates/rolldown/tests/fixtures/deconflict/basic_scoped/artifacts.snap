---
source: crates/rolldown/tests/common/case.rs
expression: content
input_file: crates/rolldown/tests/fixtures/deconflict/basic_scoped
---
# Assets

## main.mjs

```js
import { default as assert } from "assert";

//#region a.js
const a$1 = 'a.js';

//#endregion

//#region main.js
const a = 'main.js';
function foo(a$1$1) {
	return [a$1$1, a, a$1];
}
assert.deepEqual(foo('foo'), ['foo', 'main.js', 'a.js']);

//#endregion

//# sourceMappingURL=main.mjs.map
```

# Sourcemap Visualizer

- ../a.js
(0:0-0:6) "const " --> (3:0-3:6) "\nconst"
(0:6-0:10) "a = " --> (3:6-3:12) " a$1 ="
(0:10-3:1) "'a.js'\n\nexport { a }\n" --> (3:12-8:0) " 'a.js';\n\n//#endregion\n\n//#region main.js"
- ../main.js
(2:0-2:6) "\nconst" --> (8:0-8:6) "\nconst"
(2:6-2:10) " a =" --> (8:6-8:10) " a ="
(2:10-5:0) " 'main.js'\n\n" --> (8:10-9:0) " 'main.js';"
(5:0-5:9) "\nfunction" --> (9:0-9:9) "\nfunction"
(5:9-5:13) " foo" --> (9:9-9:13) " foo"
(5:13-5:18) "(a$1)" --> (9:13-9:20) "(a$1$1)"
(5:18-6:2) " {\n " --> (9:20-10:0) " {"
(6:2-6:9) " return" --> (10:0-10:8) "\n\treturn"
(6:9-6:10) " " --> (10:8-10:9) " "
(6:10-6:15) "[a$1," --> (10:9-10:16) "[a$1$1,"
(6:15-6:18) " a," --> (10:16-10:19) " a,"
(6:18-6:22) " aJs" --> (10:19-10:23) " a$1"
(6:22-7:1) "]\n" --> (10:23-11:0) "];"
(7:1-9:0) "}\n" --> (11:0-12:0) "\n}"
(9:0-9:7) "\nassert" --> (12:0-12:7) "\nassert"
(9:7-9:17) ".deepEqual" --> (12:7-12:17) ".deepEqual"
(9:17-9:21) "(foo" --> (12:17-12:21) "(foo"
(9:21-9:27) "('foo'" --> (12:21-12:27) "('foo'"
(9:27-9:29) ")," --> (12:27-12:29) "),"
(9:29-9:30) " " --> (12:29-12:30) " "
(9:30-9:37) "['foo'," --> (12:30-12:37) "['foo',"
(9:37-9:48) " 'main.js'," --> (12:37-12:48) " 'main.js',"
(9:48-9:55) " 'a.js'" --> (12:48-12:55) " 'a.js'"
(9:55-9:56) "]" --> (12:55-12:56) "]"
(9:56-10:1) ")\n" --> (12:56-16:34) ");\n\n//#endregion\n\n//# sourceMappingURL=main.mjs.map"
